{"version":3,"sources":["components/Profile/Profile.module.css","components/TransactionHistory/TransactionHistory.module.css","components/Statistics/Statistics.module.css","components/FriendList/FriendItem.module.css","components/TransactionHistory/TransactionHistoryItem.module.css","components/Statistics/StatisticsItem.module.css","components/FriendList/FriendList.module.css","components/Profile/Profile.js","components/Statistics/StatisticsItem.js","components/Statistics/Statistics.js","components/FriendList/Friendsitem.js","components/FriendList/FriendList.js","components/TransactionHistory/TransactionHistoryItem.js","components/TransactionHistory/TransactionHistory.js","components/App.js","index.js"],"names":["module","exports","Profile","user","className","styles","profile","description","src","avatar","alt","name","tag","location","stats","statsItem","label","quantity","followers","views","likes","StatisticsItem","item","percentage","Statistics","title","statistics","statList","map","key","id","style","backgroundColor","Math","random","toString","FriendItem","flagClass","isOnline","isOffline","FriendList","friends","friendList","length","Friendsitem","TransactionHistoryItem","transaction","tableCell","type","amount","currency","TransactionHistory","items","tableHead","tableRow","idx","RowClasses","greyRow","whiteRow","colSpan","App","statisticalData","transactions","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d7302204.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__2cKAU\",\"description\":\"Profile_description__2G_P4\",\"avatar\":\"Profile_avatar__31J7H\",\"name\":\"Profile_name__2HNKd\",\"tag\":\"Profile_tag__LBru_\",\"location\":\"Profile_location__FUywW\",\"stats\":\"Profile_stats__og9oX\",\"statsItem\":\"Profile_statsItem__WsDIv\",\"label\":\"Profile_label__34wbe\",\"quantity\":\"Profile_quantity__PfaLr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TransactionHistory\":\"TransactionHistory_TransactionHistory__3pdrv\",\"tableHead\":\"TransactionHistory_tableHead__2_nRm\",\"tableRow\":\"TransactionHistory_tableRow__3Diwv\",\"greyRow\":\"TransactionHistory_greyRow__iaTHG TransactionHistory_tableRow__3Diwv\",\"whiteRow\":\"TransactionHistory_whiteRow__3v71o TransactionHistory_tableRow__3Diwv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"Statistics_statistics__1gbFy\",\"title\":\"Statistics_title__mbynz\",\"statList\":\"Statistics_statList__3WZjI Statistics_title__mbynz\",\"item\":\"Statistics_item__O1xME\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"status\":\"FriendItem_status__15zv_\",\"isOnline\":\"FriendItem_isOnline__3qGMi FriendItem_status__15zv_\",\"isOffline\":\"FriendItem_isOffline__1AV7J FriendItem_status__15zv_\",\"avatar\":\"FriendItem_avatar__IJ7Mp\",\"name\":\"FriendItem_name__1LvDF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tableCell\":\"TransactionHistoryItem_tableCell__3fLZ8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"StatisticsItem_label__2SnEm\",\"percentage\":\"StatisticsItem_percentage__1WBUJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friendList\":\"FriendList_friendList__3dGBO\",\"item\":\"FriendList_item__fewz5\"};","import React from 'react';\nimport propTypes from 'prop-types';\nimport styles from './Profile.module.css';\n\nconst Profile = ({ user }) => {\n  return (\n    <div className={styles.profile}>\n      <div className={styles.description}>\n        <img src={user.avatar} alt=\"user avatar\" className={styles.avatar} />\n        <p className={styles.name}>{user.name}</p>\n        <p className={styles.tag}>{`@ ${user.tag}`}</p>\n        <p className={styles.location}>{user.location}</p>\n      </div>\n\n      <ul className={styles.stats}>\n        <li className={styles.statsItem}>\n          <span className={styles.label}>Followers</span>\n          <span className={styles.quantity}>{user.stats.followers}</span>\n        </li>\n        <li className={styles.statsItem}>\n          <span className={styles.label}>Views</span>\n          <span className={styles.quantity}>{user.stats.views}</span>\n        </li>\n        <li className={styles.statsItem}>\n          <span className={styles.label}>Likes</span>\n          <span className={styles.quantity}>{user.stats.likes}</span>\n        </li>\n      </ul>\n    </div>\n  );\n};\n\nProfile.propTypes = {\n  user: propTypes.shape({\n    avatar: propTypes.string,\n    name: propTypes.string.isRequired,\n    tag: propTypes.string.isRequired,\n    location: propTypes.string,\n    stats: propTypes.shape({\n      followers: propTypes.number.isRequired,\n      views: propTypes.number.isRequired,\n      likes: propTypes.number.isRequired,\n    }).isRequired,\n  }).isRequired,\n};\n\nexport default Profile;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport styles from './StatisticsItem.module.css';\n\nconst StatisticsItem = ({ item }) => (\n  <>\n    <span className={styles.label}>{item.label}</span>\n    <span className={styles.percentage}>{`${item.percentage}%`}</span>\n  </>\n);\n\nStatisticsItem.propTypes = {\n  item: propTypes.shape({\n    label: propTypes.string.isRequired,\n    percentage: propTypes.number.isRequired,\n  }).isRequired,\n};\n\nexport default StatisticsItem;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport styles from './Statistics.module.css';\nimport StatisticsItem from './StatisticsItem';\n\nconst Statistics = ({ title, stats }) => {\n  const randomColor = () => {\n    // eslint-disable-next-line no-bitwise\n    return `#${(((1 << 24) * Math.random()) | 0).toString(16)}`;\n  };\n  return (\n    <section className={styles.statistics}>\n      <h2 className={styles.title}>{title}</h2>\n      <ul className={styles.statList}>\n        {stats.map(item => (\n          <li\n            className={styles.item}\n            key={item.id}\n            style={{ backgroundColor: randomColor() }}\n          >\n            <StatisticsItem item={item} />\n          </li>\n        ))}\n      </ul>\n    </section>\n  );\n};\n\nStatistics.propTypes = {\n  title: propTypes.string.isRequired,\n  stats: propTypes.arrayOf(\n    propTypes.shape({\n      id: propTypes.string.isRequired,\n    }),\n  ).isRequired,\n};\n\nexport default Statistics;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport styles from './FriendItem.module.css';\n\nconst FriendItem = ({ item }) => {\n  const flagClass = item.isOnline ? styles.isOnline : styles.isOffline;\n\n  return (\n    <>\n      <span className={flagClass}>{item.isOnline}</span>\n      <img className={styles.avatar} src={item.avatar} alt={item.name} />\n      <p className={styles.name}>{item.name}</p>\n    </>\n  );\n};\n\nFriendItem.propTypes = {\n  item: propTypes.shape({\n    isOnline: propTypes.bool.isRequired,\n    avatar: propTypes.string.isRequired,\n    name: propTypes.string.isRequired,\n  }).isRequired,\n};\n\nexport default FriendItem;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport styles from './FriendList.module.css';\nimport Friendsitem from './Friendsitem';\n\nconst FriendList = ({ friends }) => (\n  <ul className={styles.friendList}>\n    {friends.length > 0 ? (\n      friends.map(item => (\n        <li className={styles.item} key={item.id}>\n          <Friendsitem item={item} />\n        </li>\n      ))\n    ) : (\n      <li> You have no friends...</li>\n    )}\n  </ul>\n);\n\nFriendList.propTypes = {\n  friends: propTypes.arrayOf(\n    propTypes.shape({\n      id: propTypes.number.isRequired,\n    }),\n  ).isRequired,\n};\n\nexport default FriendList;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport styles from './TransactionHistoryItem.module.css';\n\nconst TransactionHistoryItem = ({ transaction }) => (\n  <>\n    <td className={styles.tableCell}>{transaction.type}</td>\n    <td className={styles.tableCell}>{transaction.amount}</td>\n    <td className={styles.tableCell}>{transaction.currency}</td>\n  </>\n);\n\nTransactionHistoryItem.propTypes = {\n  transaction: propTypes.shape({\n    type: propTypes.string.isRequired,\n    amount: propTypes.string.isRequired,\n    currency: propTypes.string.isRequired,\n  }).isRequired,\n};\n\nexport default TransactionHistoryItem;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport styles from './TransactionHistory.module.css';\nimport TransactionHistoryItem from './TransactionHistoryItem';\n\nconst TransactionHistory = ({ items }) => (\n  <table className={styles.TransactionHistory}>\n    <thead className={styles.tableHead}>\n      <tr className={styles.tableRow}>\n        <th>Type</th>\n        <th>Amount</th>\n        <th>Currency</th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {items.length > 0 ? (\n        items.map((item, idx) => {\n          const RowClasses = idx % 2 ? styles.greyRow : styles.whiteRow;\n          return (\n            <tr key={item.id} className={RowClasses}>\n              <TransactionHistoryItem transaction={item} />\n            </tr>\n          );\n        })\n      ) : (\n        <tr className={styles.tableRow}>\n          <td colSpan=\"3\">NO DATA</td>\n        </tr>\n      )}\n    </tbody>\n  </table>\n);\n\nTransactionHistory.propTypes = {\n  items: propTypes.arrayOf(\n    propTypes.shape({\n      id: propTypes.string.isRequired,\n    }),\n  ).isRequired,\n};\n\nexport default TransactionHistory;\n","import React from 'react';\nimport Profile from './Profile/Profile';\nimport user from '../user.json';\nimport Statistics from './Statistics/Statistics';\nimport statisticalData from '../statistical-data.json';\nimport friends from '../friends.json';\nimport FriendList from './FriendList/FriendList';\nimport transactions from '../transactions.json';\nimport TransactionHistory from './TransactionHistory/TransactionHistory';\n\nconst App = () => (\n  <>\n    <Profile user={user} />\n    <Statistics title=\"Upload stats\" stats={statisticalData} />\n    <FriendList friends={friends} />\n    <TransactionHistory items={transactions} />\n  </>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}